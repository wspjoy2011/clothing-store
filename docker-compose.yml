services:
  web:
    restart: always
    build:
      context: services/backend
      dockerfile: Dockerfile
    container_name: clothing-store-backend
    command: [ "/bin/bash", "/commands/run_fastapi_dev.sh" ]
    env_file:
      - services/backend/.env
    environment:
      - LOG_LEVEL=debug
      - PYTHONPATH=/usr/src/clothing-store/backend
      - WATCHFILES_FORCE_POLLING=true
    volumes:
      - ./services/backend/src:/usr/src/clothing-store/backend
      - ./dataset:/usr/src/dataset
      - ./logs:/usr/src/logs
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - clothing_store_network

  frontend:
    restart: always
    build:
      context: services/frontend
      dockerfile: Dockerfile
    container_name: clothing-store-frontend
    command: ["npm", "run", "dev", "--", "--config", "/usr/src/clothing-store/frontend/vite.config.js"]
    env_file:
      - services/frontend/.env
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      - web
    volumes:
      - ./services/frontend:/usr/src/clothing-store/frontend
      - /usr/src/clothing-store/frontend/node_modules
    ports:
      - "5000:5000"
    networks:
      - clothing_store_network

  db:
    image: 'postgres:17.4'
    restart: unless-stopped
    container_name: postgres_clothing_store
    env_file:
      - services/backend/.env
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_clothing_store_data:/var/lib/postgresql/data/
    networks:
      - clothing_store_network
    healthcheck:
      test: >
        sh -c "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1 || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  pgadmin:
    image: 'dpage/pgadmin4:9.2'
    restart: unless-stopped
    container_name: pgadmin_clothing_store
    ports:
      - "3333:80"
    env_file:
      - services/backend/.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_clothing_store_data:/var/lib/pgadmin
    networks:
      - clothing_store_network


volumes:
  postgres_clothing_store_data:
    driver: local
  pgadmin_clothing_store_data:
    driver: local

networks:
  clothing_store_network:
